name: Build ffmpeg
on:
  schedule:
    - cron: '0 0 1 * *'
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build:
    strategy:
      matrix:
        platform: [macos-latest, ubuntu-20.04, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: Move into ffmpeg dir
        run: cd ./FFmpeg

      - name: Configure
        run: ./configure --disable-shared --enable-static --enable-libx264 --enable-gpl --enable-libfdk_aac --enable-libmp3lame --enable-libopus --enable-nonfree --enable-openssl

      - name: Make
        run: make

      - name: Get triplet
        id: triplet
        run: triplet=$(rustc -Vv | rg host | cut -d " " -f 2)

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}

      - name: Upload Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./ffmpeg
          asset_name: ffmpeg_${{ steps.triplet.outputs.triplet }}
          asset_content_type: application/octet-stream
